import fastwer 
import string
# Эталонный текст
ref = ['Привет мир! Это тест для того, чтобы понять какую метрику использовать!']
# Текст что выдал конкурент после распознания
hypo = ['Привет мир. Это тест для того.  Чтобы понять какую метрику использовать.']

# Функция для очистки текста
def preprocess_text(text):
    # Приводим к нижнему регистру
    text = text.lower()
    # Удаляем знаки препинания
    # Удаляем знаки препинания, включая кавычки
    punctuation = string.punctuation.replace('-', '') + '«»“”„’‘"—'
    text = text.translate(str.maketrans('', '', punctuation))
    # Заменяем переносы строк пробелами
    text = text.replace('\n', ' ')
    return text.strip()

# Подсчет wer (применять только для очищенных текстов (приведеных к малому регистру, без знаков препинания)
wer_score = fastwer.score_sent(preprocess_text(hypo[0]), preprocess_text(ref[0]))
# Подсчет cer (применять для обычных текстов для подсчета финализированной оценки в тех случаях когда система конкурента выдает текст со знаками припинания и предложениями.
cer_score = fastwer.score_sent(hypo[0], ref[0], char_level=True)

# WER ты счиатешь всегда, а CER в тех случаях когда система конкурентов после распознания выдает текст со знаками припинания и предложениями. 


